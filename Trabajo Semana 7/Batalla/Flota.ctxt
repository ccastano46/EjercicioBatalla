#BlueJ class context
comment0.target=Flota
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Flota\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=nombre
comment1.target=Flota(java.lang.String)
comment1.text=\r\n\ Metodo\ constructor\ de\ la\ clase\ Flota\r\n
comment10.params=
comment10.target=java.util.ArrayList\ getMarinos()
comment10.text=\r\n\ Metodo\ para\ saber\ que\ marinos\ pertenecen\ a\ la\ tropa\r\n\ @return\ ArrayList\ de\ la\ clase\ Marino\r\n
comment11.params=numeroBarco
comment11.target=void\ autoDestruirBarco(int)
comment11.text=\r\n\ Metodo\ para\ autodestruir\ un\ barco\r\n
comment12.params=marino
comment12.target=void\ autoDestruirMarino(Marino)
comment12.text=\r\n\ Metodo\ para\ autodestruir\ un\ marino\r\n
comment13.params=submarino
comment13.target=void\ autoDestruirSubmarino(Submarino)
comment13.text=\r\n\ Funci\u00F3n\ que\ autodestruye\ todos\ los\ submarinos,\ una\ vez\ se\ destruye\ su\ madre\ nodriza\r\n\ @param\ submarino,\ submarino\ a\ destruir\r\n
comment14.params=
comment14.target=int\ potencia()
comment14.text=\r\n\ Consulta\ la\ potencia\ de\ la\ flota.\ \r\n\ @throws\ BatallaNaval\ si\ existen\ menos\ marinos\ que\ m\u00E1quinas\ en\ la\ flota\r\n
comment15.params=marino\ maquina
comment15.target=void\ anadirMarino(Marino,\ Maquina)
comment15.text=\r\n\ Metodo\ que\ enlista\ un\ marino\ en\ la\ maquina\ asignada\r\n\ @param\ marino,\ marino\ a\ ser\ a\u00F1adido\ a\ la\ flota.\r\n\ @param\ maquina,\ maquina\ de\ la\ cual\ el\ marino\ va\ a\ ser\ parte.\r\n
comment16.params=
comment16.target=int\ numMaquinas()
comment17.params=
comment17.target=int\ numMarinos()
comment2.params=
comment2.target=java.lang.String\ getNombre()
comment2.text=\r\n\ Funci\u00F3n\ que\ indica\ el\ nombre\ de\ la\ flota\r\n\ @return\ nombre\r\n
comment3.params=newMaquina
comment3.target=void\ buildMaquina(Maquina)
comment3.text=\r\n\ Metodo\ que\ a\u00F1ade\ una\ maquina\ a\ la\ flota\r\n
comment4.params=numeroPortaAvion\ avion
comment4.target=void\ anadirAvion(int,\ Avion)
comment4.text=\r\n\ Metodo\ que\ crea\ un\ avi\u00F3n\ en\ la\ flota\ y\ se\ lo\ asigna\ a\ un\ porta\ avi\u00F3n\ previamente\ creado.\r\n
comment5.params=submarino
comment5.target=void\ anadirSubmarino(Submarino)
comment5.text=\r\n\ Metodo\ que\ a\u00F1ade\ un\ submarino\ a\ una\ flota\ y\ a\ su\ maquina\ nodriza\r\n
comment6.params=
comment6.target=void\ alNorte()
comment6.text=\r\n\ Mueve\ la\ flota\ una\ posicion\ al\ norte\r\n\ @throw\ BatallaNavalException\ si\ una\ de\ sus\ maquinas\ no\ logra\ realizar\ la\ operaci\u00F3n\r\n
comment7.params=dLon\ dLat
comment7.target=void\ avance(int,\ int)
comment7.text=\r\n\ Mueve\ todas\ las\ maquinas\ la\ distancia\ definida\r\n\ @param\ dLon,\ avance\ en\ longitud.\r\n\ @param\ dLat,\ avance\ en\ latitud.\r\n
comment8.params=
comment8.target=java.util.ArrayList\ maquinasDebiles()
comment8.text=\r\n\ Consulta\ las\ maquinas\ debiles\ de\ una\ flota\r\n\ Un\ barco\ es\ debil\ si\ tiene\ menos\ de\ 5\ marinos;\ un\ avi\u00F3n,\ si\ no\ tiene\ piloto\ principal;\ y\ un\ portaaviones,\ si\ es\ un\ barco\ debil,\ o\ uno\ de\ \r\n\ sus\ aviones\ en\ el\ aire\ es\ debil.\r\n\ return\ ArrayList\ de\ las\ maquinas\ debiles\r\n
comment9.params=lon\ lat
comment9.target=void\ ataquen(int,\ int)
comment9.text=\r\n\ Mueve\ todas\ las\ maquinas\ que\ no\ son\ d\u00E9biles\ paso\ a\ paso\ (uno\ a\ uno)\ hacia\ la\ posici\u00F3n\ a\ atacar\ indicada\ por\ (lon,\ lat)\r\n\ @param,\ lon,\ longitud\r\n\ @param\ lat,\ latitud\r\n
numComments=18
